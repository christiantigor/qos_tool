import subprocess
import re
import sys
import qosparam
import MySQLdb

#classes
class mdm:
    def __init__(self, symlink, stream):
        self.symlink = symlink
        self.stream = stream #used for receiving response from IVR - speech quality measurement
        self.operator = None
        self.balance = None
        self.smsPerc = None
        self.sQuality = None

def main():
    listModem = []

    #list all USB device
    try:
        processAllUsb = subprocess.Popen(
            ["ls /dev/ttyUSB*"],
            stdout = subprocess.PIPE,
            stderr = subprocess.PIPE,
            shell = True
        )
    
        listAllUsb, errorAllUsb = processAllUsb.communicate()
        #print listAllUsb
    
        #get largest number of ttyUSBx
        try:
            lastChar = listAllUsb[len(listAllUsb)-2]
            largest = int(lastChar)
            #print largest
        except:
            print "!!! last char is not a number - may indicate there is no usb device !!!"
            sys.exit(1)
            

    except subprocess.CalledProcessError:
        print "!!! list all USB error !!!"
        sys.exit(1)

    #list USB modem and their ttyUSBx
    try:
        base = "udevadm info --query=symlink --name=ttyUSB"
        for num in range(0, largest+1):
            cmd = base + str(num)
            #print cmd

            processUdevadm = subprocess.Popen(
                [cmd],
                stdout = subprocess.PIPE,
                stderr = subprocess.PIPE,
                shell = True
            )

            outUdevadm, errorUdevadm = processUdevadm.communicate()

            try:
                if re.search("gsmmodem",outUdevadm):
                    m = mdm("ttyUSB"+str(num),"ttyUSB"+str(num+1))
                    listModem.append(m)
                    #print "ttyUSB"+str(num)+" is modem"
                    #pass
                else:
                    #print "ttyUSB"+str(num)+" is not modem"
                    pass
            except:
                print "!!! no modem detected !!!"
                sys.exit(1)

    except subprocess.CalledProcessError:
        print "!!! get modem's ttyUSBx error !!!"
        sys.exit(1)

    try:
        for modem in listModem:
            #get network operator
            operator = qosparam.operator(modem.symlink)
            modem.operator = operator
            #print "Operator: %s" %operator

            #get sim card balance
            balance =  qosparam.balance(operator,modem.symlink)
            modem.balance = balance
            #print "Balance: %s" %balance

            #get sms delivery percentage
            #//OK
            #phone = "+6281514797598"
            #trial = 2
            #ocr = qosparam.smsdelivery(phone,trial,modem.symlink)
            #perc = ocr / float(trial) * 100
            #modem.smsPerc = perc
            #print "[%s]SMS:%d sent, %.2f%% has delivery report" % (operator,trial,perc)
            #//END OK

            #check get sms delivery per operator
            #if operator == '"TELKOMSEL"':
                #ocr = qosparam.smsdelivery(phone,trial,modem.symlink)
                #perc = ocr / float(trial) * 100
                #print '[%s]SMS:%d sent, %.2f%% has delivery report' % (operator,trial,perc)

            #get call quality
            sQuality = qosparam.speechquality(operator,modem.stream,modem.symlink)
            modem.sQuality = sQuality
            #print "Voice MOS: %s" %sQuality

            #get call success

    except:
        print "!!! problems in get parameter !!!"
        sys.exit(1)

    #put data to database
    try:
        db = MySQLdb.connect("localhost","monitor","password","qostool")
        curs = db.cursor()
        
        #use python context manager for automatic rollback
        op = '"TELKOMSEL"'
        bl = '2200'
        sms = '50.00'
        mos = '1.0023'

        for m in listModem:
            cmd = ("INSERT INTO testresult VALUES (CURRENT_DATE(),NOW()," + m.operator + ",
" + m.balance + "," + m.smsPerc + "," + m.sQuality + "no" + ")"
            print modem.operator
            print modem.balance
            print modem.smsPerc
            print modem.sQuality

        with db:
            cmd = "INSERT INTO testresult VALUES (CURRENT_DATE(),NOW()," + op + "," + bl + "," + sms + "," + mos + "no" + ")"
            print cmd
    except:
        print "!!! problems put data to database  !!!"
        sys.exit(1)

if __name__ == '__main__':
    main()
